MY LEARNING LOG
1. 建立仓库：git init; git add; git commit -. <messege>
2. 更新状态：git status; git diff; (上次提交后工作区修改)
            git log; git reflog; git reset;
            
            WORK_TREE -> STAGE（暂存区） -> MASTER_TREE
            更新  add                  commit    (跟踪修改)

            撤销操作：git checkout -- file(撤销工作区内容，回到上一次add或commit)
                     git reset HEAD <file>(撤销stage内容到工作区，再丢弃工作区内容)
                     提交到了版本库：版本回退 git reset --hard <版本id前几位>
                     
            删除操作：rm; git rm (commit); git 
            误删恢复 git checkout -- <file>
3. 分支：   创建分支 git checkout -b(create and switch to) "branch_name"
            git branch 查看当前分支
            git log --graph(... ...) 查看日志
            git merge: 分支合并
            合并冲突（conflict）：手动解决

            fast forward: 合并分支时会删去历史记录，看不到做过合并
            禁用 fast forward: (在 merge 时) e.g. merge --no-ff -m "merge with no ff" dev
            
            管理策略：
                1. master (main) 仅用来发布新版本，不干活
                2. 在dev上干活，添加每个人的分支，稳定后发布到master
                3. 分支修bug
        
            bug分支：未提交分支再建分支，储存分支 stash
            结束后： git stash list 查看刚才存的工作现场
            1. git stash apply (恢复刚才工作区) + git stash drop (删除stash)
            2. git stash pop  (从刚才恢复工作区并删除stash内容)
            
it log --graph 查看分支合并图